import kivy
from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.gridlayout import GridLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.popup import Popup

class InputScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)

         # Create a layout for input fields and calculate button
        input_layout = GridLayout(cols=2, spacing=10, padding=10)

        input_layout.add_widget(Label(text="Enter the Total Amount:"))
        self.first_input = TextInput(multiline=False,background_color="grey")
        
        input_layout.add_widget(self.first_input)

        input_layout.add_widget(Label(text="Enter Total Member:"))
        self.second_input = TextInput(multiline=False)
        input_layout.add_widget(self.second_input)

        # Create a layout for the "Calculate" button
        calculate_layout = BoxLayout(orientation='vertical', spacing=10, padding=10,)
        calculate_button = Button(text="Calculate", size_hint=(None, None), size=(120, 60),background_color="green" ,pos_hint={'center_x': 0.7})
        calculate_button.bind(on_press=self.calculate_division)
        calculate_layout.add_widget(Label())  # Add an empty label for spacing
        calculate_layout.add_widget(calculate_button)

        # Add the layouts to the screen
        self.add_widget(input_layout)
        self.add_widget(calculate_layout)

        # Create a layout for the "Close App" button
        close_layout = BoxLayout(orientation='vertical', spacing=10, padding=10,)
        close_button = Button(text='Close App', size_hint=(None, None), size=(100, 50),background_color="red",pos_hint={'center_x': 0.25})
        close_button.bind(on_press=self.close_app)
        close_layout.add_widget(Label())  # Add an empty label for spacing
        close_layout.add_widget(close_button)

        # Add the layout to the screen
        self.add_widget(close_layout)

    def close_app(self, instance):
        # Close the app
        App.get_running_app().stop()

    def calculate_division(self, button):
        try:
            first_number = float(self.first_input.text)
            second_number = float(self.second_input.text)
            result = first_number / second_number

            self.manager.current = "output_screen"  # Switch to output screen
            self.manager.get_screen("output_screen").display_result(result)
        except ValueError:
            self.show_error_popup("Invalid input. Please enter numbers only.")
        except ZeroDivisionError:
            self.show_error_popup("Cannot divide by zero.")

    def show_error_popup(self, message):
        popup = Popup(title='Error', content=Label(text=message), size_hint=(None, None), size=(400, 200))
        popup.open()

class OutputScreen(Screen):
    def display_result(self, result):
        self.clear_widgets()  # Clear any previous output
        result_layout = BoxLayout(orientation='vertical', spacing=10, padding=10)
        result_label = Label(text=f"The Amount Per Member is: {result:.2f}")
        refresh_button = Button(text="Refresh",size=(120,70),size_hint=(None, None),pos_hint={'center_x': 0.7, 'center_y': 0.3},background_color="green" ,on_press=self.go_to_input_screen)
        result_layout.add_widget(result_label)
        result_layout.add_widget(refresh_button)

        # Center the layout horizontally
        result_layout.pos_hint = {"center_x": 0.5}

        # Create a layout for the "Close App" button
        close_layout = BoxLayout(orientation='vertical', spacing=10, padding=10)
        close_button = Button(text='Close App', size_hint=(None, None), size=(100, 50), background_color="red",pos_hint={'center_x': 0.2, 'center_y': 0.2})
        close_button.bind(on_press=self.close_app)
        close_layout.add_widget(close_button)

        # Add the layouts to the screen
        self.add_widget(result_layout)
        self.add_widget(close_layout)

    def go_to_input_screen(self, button):
        self.manager.current = "input_screen"  # Switch to the input screen

    def close_app(self, instance):
        # Close the app
        App.get_running_app().stop()

class Expenses_Tracker_App(App):
    def build(self):
        screen_manager = ScreenManager()
        screen_manager.add_widget(InputScreen(name="input_screen"))
        screen_manager.add_widget(OutputScreen(name="output_screen"))
        return screen_manager

if __name__ == "__main__":
    Expenses_Tracker_App().run()
